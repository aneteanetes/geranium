var __decorate = this && this.__decorate || function (a, b, c, d) { var g, e = arguments.length, f = e < 3 ? b : null === d ? d = Object.getOwnPropertyDescriptor(b, c) : d; if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) f = Reflect.decorate(a, b, c, d); else for (var h = a.length - 1; h >= 0; h--)(g = a[h]) && (f = (e < 3 ? g(f) : e > 3 ? g(b, c, f) : g(b, c)) || f); return e > 3 && f && Object.defineProperty(b, c, f), f }, __awaiter = this && this.__awaiter || function (a, b, c, d) { return new (c || (c = Promise))(function (e, f) { function g(a) { try { i(d.next(a)) } catch (a) { f(a) } } function h(a) { try { i(d.throw(a)) } catch (a) { f(a) } } function i(a) { a.done ? e(a.value) : new c(function (b) { b(a.value) }).then(g, h) } i((d = d.apply(a, b || [])).next()) }) }, __metadata = this && this.__metadata || function (a, b) { if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(a, b) }; Array.prototype.remove || (Array.prototype.remove = function (a) { return this.filter(b => b !== a) }), Array.prototype.removeSame || (Array.prototype.removeSame = function () { return this.filter(function (a, b, c) { return b == c.indexOf(a) }) }), Array.prototype.groupBy || (Array.prototype.groupBy = function (a) { var b = this, c = [], d = b.map(b => b[a]), e = d.filter((a, b, c) => c.indexOf(a) === b); return e.forEach(d => { c.push(b.filter(b => b[a] == d)) }), c }), String.prototype.replaceAll || (String.prototype.replaceAll = function (a, b) { return this.replace(new RegExp(a, "g"), b) }), String.prototype.random || (String.prototype.random = function (a) { for (var b = "abcdefghijkl0123456789mnopqrstuvwxyz", c = "", d = a; d > 0; --d)c += b[Math.floor(Math.random() * b.length)]; return c }), String.prototype.randomize || (String.prototype.randomize = function () { return this + this.random(6) }); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.Route = b }(b = a.contracts || (a.contracts = {})) }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b extends a.Route { } a.RouteMatch = b }(b = a.contracts || (a.contracts = {})) }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.RouteContext = b }(b = a.contracts || (a.contracts = {})) }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { function c() { return b.slice() } function e(b, c) { var d = new b; let e = j(d, null); var f = e.removeSame().reverse(); return c && a.settings.parameterFullUrl && f.push.apply(f, c), "/" + f.join("/").toLowerCase() } function f(b, c) { return "string" == typeof b || b instanceof a.contracts.RouteContext || c ? d => { if ("string" == typeof b && i(d, b), c && i(d, e(b) + e(d)), b instanceof a.contracts.RouteContext) { var f = e(d); b.parent && (f = e(b.parent) + f), b.prepath && (f = b.prepath + f), i(d, f, b.executable) } } : void i(b, e(b)) } function g(a) { var b = new a; d.push(b.constructor.name) } function h(a) { i(a, "/") } function i(c, d, e) { var f = new a.contracts.Route; f.url = d, f.ctor = c, f.executable = e, c.prototype["@routed"] = f, b.push(f) } function j(a, b) { if (null == b && (b = []), null == a) return null; var c = a.constructor.name; return "Object" == c ? null : (d.indexOf(c) == -1 && b.push(c), a = Object.getPrototypeOf(a), b.concat(j(a, b)), b) } a.settings = { parameterFullUrl: !1 }; var b = []; a.routes = c; var d = []; a.urlFromCtor = e, a.routed = f, a.routeignore = g, a.routeroot = h }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (c) { class d { get routes() { return b.routes() } routeByUrl(a) { return this.match(a) } match(a, c) { if (0 == this.routes.length) return null; var d = this.routes.filter(b => b.url == a); if ("/" == a && 0 == d.length) { var e = this.routes.reduce((a, b) => a.url.length < b.url.length ? a : b); return e } if (0 == d.length) { var f = a.split("/").remove(""), g = f.filter((a, b) => { return b != f.length - 1 }), h = this.match("/" + g.join("/")); return h.params || (h.params = []), h.params.push(f[f.length - 1]), h } var i = new b.contracts.RouteMatch; return Object.assign(i, d[0]), i.params = c, i } } c.Router = d, window && window.addEventListener("load", () => { var b = a.runtime.appSettings.router, c = b.routeByUrl(window.location.pathname); b.route(c) }) }(c = b.abstract || (b.abstract = {})) }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { class c extends b.abstract.Router { Current() { return this._current } routearea() { return ".app" } route(b) { if (null != b) { let c = b.restore ? b.selector : this.routearea(); var d = new b.ctor(b.params), e = b.executable ? b.executable : "toString"; if (!b.restore) { var f = new a.history.contracts.HistoryItem; f.url = b.url, f.title = document.title, f.state = { ctor: b.ctor.name, selector: c }, a.runtime.appSettings.history.extend(f) } d["#routed"] = { params: b.params, restore: b.restore }, d[e](c) } } } b.BasicRouter = c }(b = a.routing || (a.routing = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.HistoryItem = b }(b = a.contracts || (a.contracts = {})) }(b = a.history || (a.history = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { class c { extend(a) { null == window.history.state ? window.history.replaceState(a.state, a.title, a.url) : window.history.pushState(a.state, a.title, a.url) } restore(b) { var c = a.runtime.appSettings.router, d = c.routes.filter(a => { var c = new a.ctor; return c.constructor.name == b.ctor })[0]; d.selector = b.selector, d.restore = !0, c.route(d) } } b.Html5HistoryAPI = c, window && window.addEventListener("popstate", b => { a.runtime.appSettings.history.restore(b.state) }) }(b = a.history || (a.history = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { function c(b) { var c = a.runtime.appSettings.router; return c.routes.filter(a => { var c = new a.ctor; return c.constructor.name == b.name }).length > 0 } b.is = c }(b = a.history || (a.history = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { let c = class a { constructor() { this._requestEvents = new Array } raise(a) { this._requestEvents.forEach(b => { b(a) }) } set bind(a) { this._requestEvents.push(a) } set unbind(a) { this._requestEvents.remove(a) } }; c = __decorate([a.routing.routeignore], c), b.Event = c }(c = b.events || (b.events = {})) }(b = a.behaviors || (a.behaviors = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (b) { class c { log(b) { a.appSettings.logger.log(b) } } b.LoggedStorage = c }(b = a.abstract || (a.abstract = {})) }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.LoggedStorage { add(a) { try { return localStorage.setItem(a.constructor.name, a.toString()), !0 } catch (a) { return this.log(a), !1 } } remove(a) { try { return localStorage.removeItem(a.name), !0 } catch (a) { return this.log(a), !1 } } get(a) { var b = localStorage.getItem(a.name); return JSON.parse(b) } } a.LocalStorage = b }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.LoggedStorage { constructor(a) { super(), this.variable = "", this.variable = a } get collection() { return null == window[this.variable] && (window[this.variable] = new Array), window[this.variable] } add(a) { try { return this.collection.push(a), !0 } catch (a) { return this.log(a), !1 } } remove(a) { try { var b = this.searchFor(a); return null != b && (window[this.variable] = this.collection.remove(b)), !0 } catch (a) { return this.log(a), !1 } } get(a) { return this.searchFor(a) } searchFor(a) { var b = this.collection.filter(b => b instanceof a); return b.length > 0 ? b[0] : null } } a.WindowStorage = b }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.WindowStorage { all() { return window[this.variable] } } a.StatesStorage = b }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c { static redefine(a, b, c, e) { var f = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(a), b), g = Object.getOwnPropertyDescriptor(a, b), h = new d, i = new d; if (void 0 !== g || void 0 !== f) { if (void 0 == g && void 0 != f) return Object.defineProperty(a, b, { get() { var b = f.get.call(a), d = c(b); return i.raise({ val: b, _val: d }), d }, set(b) { let c = e.call(this, b); void 0 != c && f.set.call(a, c), h.raise({ val: b, _val: c }) }, configurable: !0 }), a["#event:set[" + b + "]"] = h, void (a["#event:get[" + b + "]"] = i); if (void 0 == g.value) Object.defineProperty(a, b, { get() { return c(g.get.call(a)) }, set(b) { let c = e.call(this, b); void 0 != c && g.set.call(a, c) }, configurable: !0 }); else { var j = Symbol(b); a[j] = a[b], Object.defineProperty(a, b, { get() { var b = a[j], d = c(b); return i.raise({ val: b, _val: d }), d }, set(b) { let c = e.call(this, b); void 0 != c && (a[j] = e(c)), h.raise({ val: b, _val: c }) }, configurable: !0 }), a["#event:set[" + b + "]"] = h, a["#event:get[" + b + "]"] = i } } } } b.Property = c; class d extends a.behaviors.events.Event { } b.PropertyEvent = d; class e { } b.PropertyAccessor = e }(c = b.reflection || (b.reflection = {})) }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { var b; !function (a) { function c(a) { return ["constructor", "clone", "__defineGetter__", "__defineSetter__", "hasOwnProperty", "__lookupGetter__", "__lookupSetter__", "propertyIsEnumerable", "__proto__", "toString", "toLocaleString", "valueOf", "isPrototypeOf"].indexOf(a) == -1 } function d(a) { for (var b = []; null != a; a = Object.getPrototypeOf(a))for (var c = Object.getOwnPropertyNames(a), d = 0; d < c.length; d++)b.indexOf(c[d]) == -1 && b.push(c[d]); return b } class b { clone(a) { var b = Object.getPrototypeOf(a), e = Object.assign({}, a, b, Object.getPrototypeOf(b)), f = d(b).filter(a => c(a)); return f.forEach(a => { "function" == typeof b[a] && (e[a] = ((...c) => { b[a].apply(e, c) })) }), e } } a.ClonerAssign = b }(b = a.cloning || (a.cloning = {})) }(b = a.reflection || (a.reflection = {})) }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { var b; !function (a) { class b { clone(a) { var b = Object.getPrototypeOf(a); return $.extend(!0, {}, b, Object.getPrototypeOf(b)) } } a.ExtendCloner = b }(b = a.cloning || (a.cloning = {})) }(b = a.reflection || (a.reflection = {})) }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (b) { var c; !function (b) { var c; !function (b) { function c(b) { b.prototype.clone = function () { return a.appSettings.cloner.clone(this) } } b.ICloneable = c }(c = b.decorators || (b.decorators = {})) }(c = b.cloning || (b.cloning = {})) }(b = a.reflection || (a.reflection = {})) }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends a.behaviors.events.Event { constructor(a) { super(), this.communicator = a } send(b) { var c, d; return null == this ? (c = a.runtime.appSettings.communicator, d = (b => { a.runtime.appSettings.logger.log(b) })) : (c = this.communicator, d = this.catchPromise), new Promise((d, e) => { try { d(c.send(b)) } catch (b) { e(new a.exceptions.Exception("Communication error!")) } }).then(a => c.recive()).catch(d) } } b.Request = c }(c = b.abstract || (b.abstract = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends b.Request { send(b, c = false) { return new Promise((c, d) => { try { c(this.communicator.send(b)) } catch (b) { d(new a.exceptions.Exception("Communication error!")) } }).then(a => { return this.communicator.recive() }).then(a => { return c || this.raise(), a }).catch(this.catchPromise) } raise() { super.raise(super.send) } } b.EventRequest = c }(c = b.abstract || (b.abstract = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (c) { class d extends b.abstract.EventRequest { constructor(b) { super(b), this.bind = (b => { var c = a.runtime.appSettings.states.all(); null != c && 0 != c.length && c.filter(a => { return !!a.synchronizer }).forEach(a => { b(a.synchronizer).then(b => { a.obtain(b) }) }) }) } } c.StatefullRequest = d }(c = b.abstract || (b.abstract = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { send(a) { this.innerPromise = $.ajax(a) } recive() { return __awaiter(this, void 0, void 0, function* () { return yield this.innerPromise }) } } a.AjaxCommunicator = b }(b = a.ajax || (a.ajax = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.StatefullRequest { constructor(b) { super(new a.ajax.AjaxCommunicator), this.catchPromise = b } catchPromise(a) { } } a.AjaxRequest = b }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { }(b = a.websocket || (a.websocket = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(b) { void 0 !== typeof WebSocket ? this.socket = new WebSocket(b) : this.socket = new a.MozWebSocket(b), this.socket.onmessage = (a => { this.data = a.data }) } send(a) { return this.socketOpened().then(() => { this.socket.send(a) }).catch(this.catchSocketError) } recive() { return this.socketRecived().then(a => { var b = this.data; return this.data = null, b }).catch(this.catchSocketError) } catchSocketError(a) { console.log(a) } socketRecived() { return new Promise(function (a) { setTimeout(a, 30) }).then(() => { null == this.data && this.socketRecived() }) } socketOpened() { return new Promise(function (a) { setTimeout(a, 30) }).then(() => { this.socket.readyState != this.socket.OPEN && this.socketOpened() }) } } a.WebSocketCommunicator = b }(b = a.websocket || (a.websocket = {})) }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.StatefullRequest { constructor(b, c) { super(new a.websocket.WebSocketCommunicator(b)), this.catchPromise = c } catchPromise(a) { } } a.WebSocketRequest = b }(b = a.backend || (a.backend = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends Error { constructor(a) { super(a), this.msg = a, Object.setPrototypeOf(this, b.prototype) } get pure() { return this.msg } } a.Exception = b }(b = a.exceptions || (a.exceptions = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b { constructor() { this.logOflog = "" } log(a) { this.logOflog += a.message, console.log("Application error: " + a.message) } get() { return this.logOflog } } a.ConsoleLogger = b }(b = a.exceptions || (a.exceptions = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { let c = class b extends a.behaviors.events.Event { constructor() { super(...arguments), this.validators = [] } obtain(a) { "string" == typeof a && (a = JSON.parse(a)), Object.assign(this, a), this.raise(this) } sync() { return __awaiter(this, void 0, void 0, function* () { if (this.synchronizer) { let b = a.runtime.appSettings.request, c = yield b.send(this.synchronizer); this.obtain(c) } }) } get synchronizer() { } }; c = __decorate([a.routing.routeignore, a.runtime.reflection.cloning.decorators.ICloneable], c), b.Model = c }(c = b.abstract || (b.abstract = {})) }(b = a.models || (a.models = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { bind(a, b) { return __awaiter(this, void 0, void 0, function* () { var c = this.detection(a); c.forEach(a => { this.binding(a, b), this.clear(a) }) }) } } a.Binding = b }(b = a.abstract || (a.abstract = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (b) { var c; !function (b) { class c extends a.abstract.Binding { detection(a) { return a.findAndfilter(this.attribute).toArray().map(a => $(a)) } } b.JQueryBinding = c }(c = b.base || (b.base = {})) }(b = a.JQueryBindings || (a.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { var b; !function (a) { class b extends a.JQueryBinding { clear(a) { a.removeAttr(this.attribute) } detection(a) { return a.findAndfilter("[" + this.attribute + "]").toArray().map(a => $(a)) } } a.JQueryByAttributeBinding = b }(b = a.base || (a.base = {})) }(b = a.JQueryBindings || (a.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends b.base.JQueryByAttributeBinding { get attribute() { return "data-multiple" } binding(b, c) { return __awaiter(this, void 0, void 0, function* () { var d = c[b.attr(this.attribute)]; b.removeAttr(this.attribute); var e = $(); if (void 0 == d || 0 == d.length) return void b.remove(); var f = b.outerHtml().replaceAll("\\[\\[", "{{").replaceAll("\\]\\]", "}}"); let g = a.runtime.appSettings.bidnings.filter(a => a.name != this.constructor.name); for (var h = 0; h < d.length; h++) { Object.assign(c, d[h]), c.view = function () { return f }; let b = yield a.viewengine.abstract.ViewEngine.ViewEngineView(c, ""), i = new a.viewDOM.JQueryViewDOM(b), j = new a.viewbinding.contracts.BindContext(i, g); yield a.runtime.appSettings.viewbinder.bind(j), e = e.add(i.getViewDOM()) } b.replaceWith(e), b = e }) } } b.JQueryCollectionBinding = c }(c = b.JQueryBindings || (b.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b extends a.base.JQueryByAttributeBinding { get attribute() { return "onclick" } binding(a, b) { let c = a.attr(this.attribute); var d = this.splitMethodAndParams(c), e = b[d.method]; null != e && "function" == typeof e && a.click(a => e.apply(b, d.params)) } splitMethodAndParams(a) { a = a.replaceAll(";", ""); var b = a.indexOf("("); if (b == -1) return { method: a, params: null }; var c = this.parseParams(a.substring(b)); return { method: a.substring(0, b), params: c } } parseParams(a) { if ("()" == a) return null; var b = a.replaceAll("\\(", "").replaceAll("\\)", ""), c = []; return b.split(",").forEach(a => { try { var b = JSON.parse(a); c.push(b) } catch (b) { c.push(a) } }), c } } a.JQueryClickBinding = b }(b = a.JQueryBindings || (a.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends b.base.JQueryByAttributeBinding { get attribute() { return "data-field" } binding(b, c) { let d = b.attr(this.attribute); a.runtime.reflection.Property.redefine(c, d, a => a, a => { return a }); var e = "#event:set[" + d + "]"; c[e] && (c[e].bind = (() => { b.html(c[d]) })) } } b.JQueryFieldBinding = c }(c = b.JQueryBindings || (b.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends b.base.JQueryBinding { get attribute() { return "input" } binding(b, c) { let d = b.attr("name"); a.runtime.reflection.Property.redefine(c, d, a => a, a => { return b.html(a), a }); var e = "#event:set[" + d + "]"; c[e] && (c[e].bind = (() => { b.val(c[d]) })), b.change(a => { c[d] = b.val() }) } clear() { } } b.JQueryInputBinding = c }(c = b.JQueryBindings || (b.JQueryBindings = {})) }(b = a.binding || (a.binding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { let c = class b extends a.models.abstract.Model { constructor() { super(), this.statefill() } statefill() { return __awaiter(this, void 0, void 0, function* () { if ("ViewState" != this.constructor.name && a.runtime.appSettings) { var b = a.runtime.appSettings.states.get(this.constructor); b || a.runtime.appSettings.states.add(this) } }) } static get(b) { return __awaiter(this, void 0, void 0, function* () { var c = a.runtime.appSettings.states.get(b); return c || (c = new b), yield c.sync(), c }) } remove() { return a.runtime.appSettings.states.remove(this.constructor) } sync() { return __awaiter(this, void 0, void 0, function* () { if (this.synchronizer) { let b = a.runtime.appSettings.request, c = yield b.send(this.synchronizer, !0); this.obtain(c) } }) } }; c = __decorate([a.routing.routeignore, __metadata("design:paramtypes", [])], c), b.State = c }(b = a.states || (a.states = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.Template = b }(b = a.contracts || (a.contracts = {})) }(b = a.templating || (a.templating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { class c { parse(b) { return a.runtime.appSettings.request.send(b.data) } } b.BackendTemplating = c }(b = a.templating || (a.templating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b { parse(a) { var b = Mustache.render(a.html, a.data); return new Promise(a => a(b)) } } a.MustacheTemplating = b }(b = a.templating || (a.templating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c extends a.templating.contracts.Template { constructor(a) { super(), this.protectRender(arguments[1]), this._selector = a } get selector() { return this._selector } protectRender(b) { if (this.html = this.declare(), this.html || (this.html = b), !this.html) throw new a.exceptions.Exception("view template is empty!") } render() { return __awaiter(this, void 0, void 0, function* () { var b = a.runtime.appSettings.templating; if (null == this.data) throw new a.exceptions.Exception("view data is not assigned!"); if (this._rendered) throw new a.exceptions.Exception("view already rendered!"); return this.html = yield b.parse(this), this._rendered = !0, new Promise(a => a(this)) }) } } b.View = c }(c = b.abstract || (b.abstract = {})) }(b = a.view || (a.view = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(a) { this._view = a } get view() { return this._view } } a.ViewDOM = b }(b = a.abstract || (a.abstract = {})) }(b = a.viewDOM || (a.viewDOM = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.ViewDOM { getViewDOM() { return null == this._$html && (this._$html = $("<div/>").html(this.view.html).contents()), this._$html } } a.JQueryViewDOM = b }(b = a.viewDOM || (a.viewDOM = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c { constructor(b, c) { this.viewDOM = b, c || (c = a.runtime.appSettings.bidnings), this.bindingFlags = c } } b.BindContext = c }(c = b.contracts || (b.contracts = {})) }(b = a.viewbinding || (a.viewbinding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c { bind(a) { return __awaiter(this, void 0, void 0, function* () { return this.viewDOM = a.viewDOM, yield this.exec(this.viewDOM, a.bindingFlags), this.valid(this.viewDOM), this.viewDOM }) } valid(b) { var c = b.view.data; if (c.validators) { var d = c.validators.groupBy("validatedPropertyName"); d.forEach(c => { var d = c[0].validatedPropertyName; a.runtime.reflection.Property.redefine(b.view.data, d, a => { return a }, function (c) { let e = !1; return this.validators.filter(a => a.validatedPropertyName === d).forEach(d => { var f = d.validate(c, this.clone()); f.success || (e = !0, a.runtime.appSettings.validreport.report(b, f)) }), e ? void 0 : c }) }) } } exec(a, b) { return __awaiter(this, void 0, void 0, function* () { for (var c = 0; c < b.length; c++)yield this.binding(a, b[c]) }) } } b.ViewBinder = c }(c = b.abstract || (b.abstract = {})) }(b = a.viewbinding || (a.viewbinding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { class b extends a.abstract.ViewBinder { binding(a, b) { var c = new b; return c.bind(a.getViewDOM(), a.view.data) } } a.JQueryViewBinder = b }(b = a.viewbinding || (a.viewbinding = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.ViewExecutingContext = b }(b = a.contracts || (a.contracts = {})) }(b = a.viewengine || (a.viewengine = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { class c { constructor(b, c) { this.view = b.iViewed, this.selector = b.selector, c || (c = a.runtime.appSettings.bidnings), this.bindingFlags = c } } b.ExecuteContext = c }(c = b.contracts || (b.contracts = {})) }(b = a.viewengine || (a.viewengine = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (c) { class d { execute(c) { return __awaiter(this, void 0, void 0, function* () { var e = yield d.ViewEngineView(c.iViewed, c.selector), f = this.viewDOM(e), g = new b.contracts.ExecuteContext(c), h = new a.viewbinding.contracts.BindContext(f, g.bindingFlags), i = a.runtime.appSettings.viewbinder; return yield i.bind(h), this.publish(f) }) } static ViewEngineView(a, b) { var c, d = a.view(); if ("string" == typeof d) { let a = e; c = new a(b, d) } else c = new d(b); return c.data = a, c.render() } } c.ViewEngine = d; class e extends a.view.abstract.View { declare() { } } }(c = b.abstract || (b.abstract = {})) }(b = a.viewengine || (a.viewengine = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { class c extends b.abstract.ViewEngine { publish(b) { return new Promise((c, d) => { try { var e = b.view.selector; $(e).jhtml(b.getViewDOM()), c(b) } catch (b) { a.runtime.appSettings.logger.log(b), d($(null)) } }) } viewDOM(b) { return new a.viewDOM.JQueryViewDOM(b) } } b.JQueryViewEngine = c }(b = a.viewengine || (a.viewengine = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { } a.ValidationResult = b }(b = a.contracts || (a.contracts = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(a, b) { this.validatedPropertyName = a, this._type = b } validate(a) { var b = new ValidationResult; return b.success = typeof a == this._type, b.success || (b.errors = [new Exception("wrong value type!")]), b } } a.TypeValidator = b }(b = a.validator || (a.validator = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(a, b, c, d) { this.validatedPropertyName = a, "number" == typeof b ? this.min = b : this.minField = b, "number" == typeof c ? this.max = c : this.maxField = c, this.strict = d } validate(a, b) { this.minField && (this.min = b[this.minField]), this.maxField && (this.max = b[this.maxField]); var c = new ValidationResult; return c.success = this.strict ? a > this.min && a < this.max : a >= this.min && a <= this.max, c.success || (c.errors = [], a < this.min && c.errors.push(new Exception("Value must be greater " + (this.strict ? "then" : "or equals") + " " + this.min)), a > this.max && c.errors.push(new Exception("Value must be less " + (this.strict ? "then" : "or equals") + " " + this.max))), c } } a.RangeValidator = b }(b = a.validator || (a.validator = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(a) { this.validatedPropertyName = a } validate(a) { var b = new ValidationResult; return b.success = a >= 0, b.success || (b.errors = [new Exception("Value must be greater or equals zero!")]), b } } a.NotLessThenZeroValidator = b }(b = a.validator || (a.validator = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { report(a, b) { b.errors.forEach(a => { console.error("VALLIDATING_ERR [" + a.name + "]:" + a.message) }) } } a.NotifyValidatingReporter = b }(b = a.reporter || (a.reporter = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { report(a, b) { var c = a.getViewDOM().findAndfilter("div.validating.error.container"); c.length > 0 && c.remove(), c = $("<div>", { class: "validating error container" }), a.getViewDOM().findAndfilter(".errors").append(c), b.errors.forEach(a => { c.append($("<p>").html(a.pure)) }) } } a.JQueryViewValidatingReporter = b }(b = a.reporter || (a.reporter = {})) }(b = a.validating || (a.validating = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { let c = class b extends a.states.State { show(b) { return __awaiter(this, void 0, void 0, function* () { if (a.history.is(this.constructor) && !this["#routed"]) { var c = this["@routed"]; c.selector = b; var d = new a.history.contracts.HistoryItem; d.url = c.url, d.title = document.title, d.state = { ctor: this.constructor.name, selector: b }, a.runtime.appSettings.history.extend(d) } else delete this["#routed"]; if (this["#ViewState"]) delete this["#ViewState"], a.runtime.appSettings.viewengine.execute({ iViewed: this, selector: b }); else { var e = yield State.get(this.constructor); e["#ViewState"] = !0, e.show(b) } }) } toString(a) { return __awaiter(this, void 0, void 0, function* () { return this.show(a) }) } }; c = __decorate([a.routing.routeignore], c), b.ViewState = c }(b = a.viewstate || (a.viewstate = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { var c; !function (b) { let c = class b extends a.models.abstract.Model { get markup() { return this.publishedViewDom } display(b) { return __awaiter(this, void 0, void 0, function* () { if (a.history.is(this.constructor) && !this["#routed"]) { var c = this["@routed"]; c.selector = b; var d = new a.history.contracts.HistoryItem; d.url = c.url, d.title = document.title, d.state = { ctor: this.constructor.name, selector: b }, a.runtime.appSettings.history.extend(d) } delete this["#routed"]; var e = this.documentTitle(); null != e && (document.title = e), this.publishedViewDom = yield a.runtime.appSettings.viewengine.execute({ iViewed: this, selector: b }) }) } documentTitle() { return null } toString(a) { return __awaiter(this, void 0, void 0, function* () { this.display(a) }) } }; c = __decorate([a.routing.routeignore], c), b.ViewModel = c }(c = b.abstract || (b.abstract = {})) }(b = a.viewmodels || (a.viewmodels = {})) }(geranium || (geranium = {})); var geranium; !function (a) { var b; !function (b) { class c { constructor() { this.logger = new a.exceptions.ConsoleLogger, this.request = new a.backend.AjaxRequest(a => { console.log(a) }), this.communicator = new a.backend.ajax.AjaxCommunicator, this.templating = new a.templating.MustacheTemplating, this.storage = new b.WindowStorage("geranium-data-storage"), this.states = new b.StatesStorage("geranium-states-storage"), this.validreport = new a.validating.reporter.JQueryViewValidatingReporter, this.viewbinder = new a.viewbinding.JQueryViewBinder, this.viewengine = new a.viewengine.JQueryViewEngine, this.router = new a.routing.BasicRouter, this.history = new a.history.Html5HistoryAPI, this.cloner = new b.reflection.cloning.ClonerAssign, this.bidnings = [a.binding.JQueryBindings.JQueryCollectionBinding, a.binding.JQueryBindings.JQueryFieldBinding, a.binding.JQueryBindings.JQueryInputBinding, a.binding.JQueryBindings.JQueryClickBinding] } init(b) { if (c.initialized) throw new a.exceptions.Exception("Application settings already initialized!"); b && (Object.assign(this, b), c.initialized = !0) } } c.initialized = !1, b.AppSettings = c; class d extends c { } b.appSettings = new d }(b = a.runtime || (a.runtime = {})) }(geranium || (geranium = {})); var geranium; !function (a) { function d(a) { let c = a || b.purple; console.log("%cgeranium is blossom", "font-weight:bold;color: " + b[c]) } var b; !function (a) { a[a.purple = 0] = "purple", a[a.darkgreen = 1] = "darkgreen", a[a.pink = 2] = "pink" }(b = a.color || (a.color = {})); var c = !1; a.blossom = d, $(function () { c || a.blossom() }) }(geranium || (geranium = {})); var appSettings = geranium.runtime.appSettings, Model = geranium.models.abstract.Model, State = geranium.states.State, View = geranium.view.abstract.View, ViewState = geranium.viewstate.ViewState, ViewModel = geranium.viewmodels.abstract.ViewModel, Binding = geranium.binding.abstract.Binding, Routed = geranium.routing.routed, Routeroot = geranium.routing.routeroot, Routeignore = geranium.routing.routeignore, ValidationResult = geranium.validating.contracts.ValidationResult, Exception = geranium.exceptions.Exception, ICloneable = geranium.runtime.reflection.cloning.decorators.ICloneable; $.fn.findAndfilter || ($.fn.findAndfilter = function (a) { let b = $(this); return b.filter(a).add(b.find(a)) }), $.fn.jhtml || ($.fn.jhtml = function (a) { let b = $(this); return b.html(""), b.append(a) }), $.fn.outerHtml || ($.fn.outerHtml = function () { return $("<div>").append($(this).clone()).html() }); var geranium; !function (a) { var b; !function (a) { var b; !function (a) { class b { constructor(a) { a && Object.assign(this, a) } } a.ViewModelHistoryState = b }(b = a.contracts || (a.contracts = {})) }(b = a.viewmodels || (a.viewmodels = {})) }(geranium || (geranium = {}));